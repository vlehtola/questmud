#define SKILLDIR "/guilds/skills/"

string target, skill, file;

start_skill(sk, trg) {
  string tmp;
  int time,agility;
  target = trg;
  file = sk;
  while (sscanf(file,"%s %s", file, tmp) == 2) {
    file = file+"_"+tmp;
  }
  skill = sk;
  if(!file) { file = skill; }
  if (!skill) { interrupt_skill(); }
  time = call_other(SKILLDIR + file, "get_time");
  time = time * 2; /* rundissa 2 sekkaa */
  agility =this_player()->query_skills("agility");
  if(agility) {
    time -= time * agility-(random(3)) / 200;        
  }
  call_out("resolve_skill", time);
  return 1;
}

resolve_skill() {
  object ob;
  ob = present(lower_case(target), environment(this_player()));
  if (!ob) {
    interrupt_skill(1);
    return 0;
  }
  if(this_player()->query_skills(skill) > random(101)) {
    call_other(SKILLDIR + file, "resolve_skill", ob);
  } else {
    call_other(SKILLDIR + file, "fail_skill", ob);
  }
  interrupt_skill(1);
  return 1;
}

interrupt_skill(arg) {
  remove_call_out("resolve_skill");
  if(!arg) log_file("MSKILL", this_player()->short()+" stopped "+skill+" at "
	+target+".("+file+") Prev_ob: "+file_name(previous_object())+"\n", 1);
  destruct(this_object());
  return 1;
}
