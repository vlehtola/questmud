int aika, control;
object aijys, elain;
start(ob, ani) {
  aijys = ob;
  elain = ani;
  shadow(elain, 1);
  control = aijys->query_skills("control animal");
  call_out("movecheck", 4);
  return 1;
}

breaktest() {
 if(control < elain->query_level()*4 && !random(2)) {
   write(elain->short()+" no longer seems to obey your commands.\n");
   say(aijys->query_name()+"'s animal no longer seems to obey "+
       aijys->query_possessive()+" commands.\n", aijys);
   destruct(this_object());
 } 
}

movecheck() {
  if (!present(aijys, environment(elain))) {
    move_object(elain, environment(aijys));
    tell_room(environment(aijys), elain->short()+" arrives.\n");
  }
  aika+=4;
  if (aika > control+10) { breaktest(); }
  call_out("movecheck", 4);
}

add_exp(arg) {
  if (arg < 0) { return; } 
  aijys->add_exp(arg);
  return;
}

death(arg) { destruct(this_object()); return; }

catch_tell(str) {
    string master,kasky,kohde;
    object ob;
    if (!str) { return 1; }
    if (sscanf(str, "%s says '%s %s'", master, kasky, kohde) == 3) {
      ob = present(lower_case(kohde),environment(elain));
      if (!ob) { return; }
      if (kasky != ("attack" || "worship")) { return; }
      if (!present(aijys,environment(elain))) { return; }
  /*  tell_object(ob, elain->short()+" is ordered to attack you.\n"); */
       tell_room(environment(aijys), elain->short()+
            " is ordered to attack "+
           aijys->query_name()+"\n");
       elain->attack_object(ob);
       return;
  }
}
