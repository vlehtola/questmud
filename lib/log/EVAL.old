Sun Jan 18 12:17:43 2004/Astarel | return ctime(time() - this_player()->query_enter_time());
Sun Jan 18 12:17:51 2004/Astarel | return stime(time() - this_player()->query_enter_time());
Sun Jan 18 12:18:03 2004/Astarel | return stime(this_player()->query_enter_time());
Sun Jan 18 12:19:07 2004/Astarel | return "/obj/player"->stime(time());
Sun Jan 18 12:20:13 2004/Astarel | return "/obj/player"->stime(time()-this_player()->query_enter_time());
Sun Jan 18 12:20:43 2004/Astarel | return ctime(this_player()->query_enter_time());
Sun Jan 18 13:00:23 2004/Astarel | this_player()->query_guild_level()
Sun Jan 18 13:00:27 2004/Astarel | this_player()->query_guild_level();
Sun Jan 18 13:00:29 2004/Astarel | return this_player()->query_guild_level();
Sun Jan 18 15:11:37 2004/Astarel | return "/obj/player"->s_time(time() - find_player("koff")->query_enter_time());
Sun Jan 18 15:11:43 2004/Astarel | write("/obj/player"->s_time(time() - find_player("koff")->query_enter_time());
Sun Jan 18 15:11:53 2004/Astarel | write("/obj/player"->s_time(time() - find_player("koff")->query_enter_time()));
Sun Jan 18 15:12:29 2004/Astarel | string str; str = "/obj/player"->s_time(time() - find_player("koff")->query_enter_time() ); return stR;
Sun Jan 18 15:12:47 2004/Astarel | string str; str = "/obj/player"->s_time(time() - find_player("koff")->query_enter_time()); return str;
Sun Jan 18 15:12:55 2004/Astarel | string str; str = "/obj/player"->s_time(time() - find_player("koff")->query_enter_time()); write(str);
Mon Jan 19 00:25:16 2004/Rag | object s; s = clone_object("/wizards/rag/misc/dragon_shadow"); s->start(find_player("ragtest"));
Mon Jan 19 00:27:00 2004/Rag | find_player("ragtest")->self_destruct();
Mon Jan 19 00:30:54 2004/Rag | object s; s = clone_object("/wizards/rag/misc/dragon_shadow"); move_object(s,find_player("ragtest")); s->start("ragtest");
Mon Jan 19 00:31:18 2004/Rag | object s; s = clone_object("/wizards/rag/misc/dragon_shadow"); move_object(s,find_player("ragtest")); s->start(find_player("ragtest"));
Mon Jan 19 00:51:20 2004/Rag | find_player("ragtest")->end_dragon_shadow();
Mon Jan 19 12:38:05 2004/Astarel | write(query_idle(find_player("bud"));
Mon Jan 19 12:38:11 2004/Astarel | write(query_idle(find_player("bud")));
Mon Jan 19 12:38:17 2004/Astarel | write(query_idle(find_player("astarel")));
Mon Jan 19 12:42:31 2004/Astarel | write(ctime(find_player("astatest")->query_enter_time());
Mon Jan 19 12:42:33 2004/Astarel | write(ctime(find_player("astatest")->query_enter_time()));
Mon Jan 19 12:42:41 2004/Astarel | write(ctime(find_player("astatest")->query_enter_time()));
Tue Jan 20 14:39:45 2004/Astarel | find_player("astarel")->set_married("1 It is married to Ashley Scott.\n*********************************************\n* En leveleistä koodaa, en aksuista koodaa, *\n*   jos koodaan, niin koodaan muuten vain.  *n*********************************************"\n);
Tue Jan 20 14:40:03 2004/Astarel | find_player("astarel")->set_married("1 It is married to Ashley Scott.\n*********************************************\n* En leveleistä koodaa, en aksuista koodaa, *\n*   jos koodaan, niin koodaan muuten vain.  *n*********************************************");
Tue Jan 20 14:40:15 2004/Astarel | find_player("astarel")->set_married("1 It is married to Ashley Scott.\n*********************************************\n* En leveleistä koodaa, en aksuista koodaa, *\n*   jos koodaan, niin koodaan muuten vain.  *\nn*********************************************");
Tue Jan 20 14:40:25 2004/Astarel | find_player("astarel")->set_married("1 It is married to Ashley Scott.\n*********************************************\n* En leveleistä koodaa, en aksuista koodaa, *\n*   jos koodaan, niin koodaan muuten vain.  *\n*********************************************");
Tue Jan 20 16:41:51 2004/Rag | find_player("koff")->query_guild_level("fighter");
Tue Jan 20 16:41:57 2004/Rag | write(find_player("koff")->query_guild_level("fighter"));
Tue Jan 20 16:45:03 2004/Rag | find_player("koff")->set_skill("bare hands",30);
Tue Jan 20 20:34:06 2004/Rag | "/daemons/guildrank_d"->count_rank_score(this_player(), "mage",1,1);
Tue Jan 20 20:43:39 2004/Rag | write("/daemons/guildrank_d"->query_highest_rank(this_player()));
Tue Jan 20 21:05:59 2004/Rag | write("/guilds/channel/r04.c")->guild_max_level());
Tue Jan 20 21:06:23 2004/Rag | write("/guilds/channel/r04.c"->guild_max_level());
Tue Jan 20 22:41:21 2004/Rag | write("/daemons/guildrank_d"->query_highest_rank(find_player("glyco")));
Wed Jan 21 12:18:02 2004/Jenny | this_player()->set_snooper();find_player("astarel")->set_snoope();
Wed Jan 21 12:20:26 2004/Jenny | this_player()->set_snooper();find_player("astarel")->set_snoopee();
Wed Jan 21 12:22:50 2004/Jenny | write(find_player("astarel")->query_married());
Wed Jan 21 12:38:06 2004/Astarel | write(function_list("/obj/party"));
Wed Jan 21 12:39:52 2004/Astarel | string str; str = function_list("/obj/party"); write(str);
Wed Jan 21 14:18:34 2004/Jenny | "/daemons/chanban_d"->add_ban("puuha","all",10);;
Wed Jan 21 14:18:40 2004/Jenny | "/daemons/chanban_d"->add_ban("traktori","all",10);;
Wed Jan 21 16:41:00 2004/Astarel | return find_player("jarzki")->query_party()->query_party_name()
Wed Jan 21 18:03:35 2004/Astarel | return find_player("tethon")->query_party()->query_party_total_exp()
Wed Jan 21 18:07:53 2004/Astarel | return "/obj/player"->s_time(find_player("ntg")->query_party()->query_party_creation_time());
Wed Jan 21 18:07:59 2004/Astarel | return write("/obj/player"->s_time(find_player("ntg")->query_party()->query_party_creation_time()));
Wed Jan 21 18:08:19 2004/Astarel | return find_player("ntg")->query_party()
Wed Jan 21 18:08:27 2004/Astarel | return find_player("ntg")->query_party()->query_party_creation_time();
Wed Jan 21 18:08:41 2004/Astarel | return  c_time(find_player("ntg")->query_party()->query_party_creation_time());
Wed Jan 21 18:08:49 2004/Astarel | return  ctime(find_player("ntg")->query_party()->query_party_creation_time());
Wed Jan 21 18:09:07 2004/Astarel | return  "/obj/player"->s_time(find_player("ntg")->query_party()->query_party_creation_time());
Wed Jan 21 18:09:13 2004/Astarel | return  "/obj/player"->stime(find_player("ntg")->query_party()->query_party_creation_time());
Wed Jan 21 18:51:34 2004/Astarel | this_player()->set_married("1 Ashley Scott.\n*********************************************\n* En leveleistä koodaa, en aksuista koodaa, *\n*   jos koodaan, niin koodaan muuten vain.  *\n*********************************************");
Wed Jan 21 22:08:39 2004/Astarel | mapping mapp; mapp = (["tiivi" : "taavi"; "toovi"; "moovi", ]); return mapp;
Wed Jan 21 22:24:21 2004/Astarel | return "/wizards/astarel/err_d"->get_daemon_mapping()
Wed Jan 21 22:24:41 2004/Astarel | return "/wizards/astarel/err_d"->get_daemon_mapping()
Thu Jan 22 12:23:33 2004/Jenny | this_player()->set_married("1 er teacher Rag who tries to teach her to code.\n She is nowadays idling a bit\n She will start coding again when she gets net\n She is your worst nightmare");
Thu Jan 22 12:23:51 2004/Jenny | this_player()->set_married("1 er teacher Rag who tries to teach her to code.\nShe is nowadays idling a bit\nShe will start coding again when she gets net\nShe is your worst nightmare");
Thu Jan 22 12:40:11 2004/Astarel | find_player("astarel")->set_best_kill("Failed to load file.",1,2);
Thu Jan 22 13:03:29 2004/Jenny | this_player()->set_married("1 her teacher Rag who tries to teach her to code.\nShe is nowadays idling a bit\nShe will start coding again when she gets net\nShe is your worst nightmare");
Thu Jan 22 13:07:55 2004/Astarel | return "/wizards/astarel/err_d"->get_daemon_mapping();
Thu Jan 22 13:11:47 2004/Astarel | return "/wizards/astarel/err_d"->get_daemon_mapping();
Thu Jan 22 22:36:28 2004/Rag | find_player("ragtest")->end_shadow();
Thu Jan 22 22:38:37 2004/Rag | find_player("ragtest")->end_shadow();
Thu Jan 22 22:41:47 2004/Rag | find_player("ragtest")->end_shadow();
Sat Jan 24 10:59:41 2004/Astarel | find_player("astarel")->set_best_kill("1 Unrecognized ihneritance modifier qualifier",1,0);
Sat Jan 24 11:00:13 2004/Astarel | find_player("astarel")->set_best_kill("Unrecognized ihneritance modifier qualifier",1,0);
Sat Jan 24 13:00:27 2004/Moonstar | find_player("moonstar")->set_best_kill("Barbie girl", 60000000, 1);
Sat Jan 24 13:00:47 2004/Astarel | int i; i = 2; i = i - 1; return i
Sat Jan 24 13:00:53 2004/Astarel | int i; i = 2; i = 1 - i; return i
Sat Jan 24 13:56:23 2004/Astarel | return find_call_out("imuri");
Sat Jan 24 13:58:17 2004/Moonstar | find_player("moonstar")->set_married("Britney Spears", 1);
Sat Jan 24 14:01:19 2004/Moonstar | this_player()->set_married("1 Piia Keihäs\nHe is lord of all martial artists");
Mon Jan 26 11:44:25 2004/Astarel | write (cat(/sys/ansi.h))
Mon Jan 26 11:44:29 2004/Astarel | write (cat(/sys/ansi.h));
Mon Jan 26 11:44:37 2004/Astarel | write (cat("/sys/ansi.h"));
Mon Jan 26 12:16:46 2004/Jenny | find_player("jarzki")->set_stunned(100);
Mon Jan 26 12:17:18 2004/Jenny | find_player("jarzki")->set_stunned(100)
Mon Jan 26 12:18:18 2004/Jenny | "/daemons/chanban_d"->add_ban("astarel","arch",1);;
Mon Jan 26 12:18:46 2004/Jenny | find_player("jarzki")->set_stunned(0);
Mon Jan 26 12:21:07 2004/Astarel | "/daemons/chanban_d"->remove_ban("astarel","arch");
Mon Jan 26 12:22:01 2004/Astarel | "/daemons/chanban_d"->add_ban("astarel","arch",0);
Tue Jan 27 12:58:41 2004/Astarel | find_player("astarel")->clear_best_kills
Tue Jan 27 12:58:53 2004/Astarel | find_player("astarel")->clear_best_kill
Tue Jan 27 12:58:59 2004/Astarel | find_player("astarel")->clear_best_kills
Tue Jan 27 13:03:36 2004/Astarel | find_player("astarel")->set_best_kill("Unrecognized inheritance modifier qualifier",1);
Tue Jan 27 13:03:51 2004/Astarel | find_player("astarel")->set_best_kill("Index out of bounds",1,2);
Tue Jan 27 13:39:32 2004/Astarel | object *ob;int i; ob=users(); for(i=0;i<sizeof(ob);i++) { ob[i]->set_level() = 0; ob[i]->death(); }
Tue Jan 27 15:58:57 2004/Jenny | find_player("rag")->move_player("/wizards/jenny/jail/jailroom");
Tue Jan 27 15:59:09 2004/Jenny | find_player("rag")->move_player("/wizards/jenny/city/jail/jailroom");
Tue Jan 27 15:59:29 2004/Jenny | find_player("rag")->move_player("/wizards/jenny/city/jail/jailroom.c");
Tue Jan 27 16:00:53 2004/Jenny | find_player("rag")->move_player(cs);
Tue Jan 27 16:00:57 2004/Jenny | find_player("rag")->move_player("cs");
Tue Jan 27 16:01:57 2004/Jenny | find_player("rag")->set_stunned(1000)
Tue Jan 27 16:01:59 2004/Jenny | find_player("rag")->set_stunned(1000);
Tue Jan 27 22:06:30 2004/Astarel | find_player("astarel")->set_best_kill("function not defined by inheritance as specified",1000000000,0);
Tue Jan 27 22:06:42 2004/Astarel | find_player("astarel")->set_best_kill("Unrecognized inheritance modifier qualifier",1000000000,0);
Tue Jan 27 22:06:54 2004/Astarel | find_player("astarel")->set_best_kill("Unrecognized inheritance modifier qualifier",1000000000,2);
Wed Jan 28 14:55:36 2004/Moonstar | find_player("moonstar")->set_wiz_short("Muscular He-Man",1);
Wed Jan 28 15:50:48 2004/Rag | find_player("ntg")->end_berserk();
Wed Jan 28 16:02:23 2004/Rag | this_player()->end_dragon_shadow();
Wed Jan 28 16:12:05 2004/Rag | write(file_name(present("cloak",find_player("adrigon"))));
Wed Jan 28 16:12:21 2004/Rag | write(file_name(present("robes",find_player("adrigon"))));
Wed Jan 28 19:15:37 2004/Rag | write(file_name(present("100"find_player("nergal"))));
Wed Jan 28 19:15:47 2004/Rag | write(file_name(present("100",find_player("nergal"))));
Thu Jan 29 21:19:24 2004/Rag | present("paladin",environment(this_player()))->set_master("kaappi");
Fri Jan 30 17:16:54 2004/Rag | destruct(present("party object",find_player("homis")));
Sat Jan 31 23:13:48 2004/Rag | object ob; ob = restore_player("drakhor"); write(ob->query_int());
Sat Jan 31 23:14:50 2004/Rag | object ob; ob = clone_object("obj/player"); ob->restore_player("drakhor"); write(ob->query_int());
Sun Feb  1 01:18:37 2004/Rag | present("ghost",environment(this_player()))->hit_with_spell(6000);
Mon Feb  2 13:05:56 2004/Jenny | find_player("moonstar")->set_gender(1);
Mon Feb  2 13:06:00 2004/Jenny | find_player("moonstar")->set_gender(2);
Mon Feb  2 13:06:06 2004/Jenny | find_player("moonstar")->set_gender(3);
Mon Feb  2 13:06:14 2004/Jenny | find_player("moonstar")->set_gender(0);
Mon Feb  2 13:06:24 2004/Jenny | find_player("moonstar")->set_gender(1);
Mon Feb  2 20:03:46 2004/Rag | present("paladin",environment(this_player()))->set_master("nergal");
Mon Feb  2 20:19:10 2004/Rag | destruct(present("party object",find_player("nergal")));
Wed Feb  4 16:19:30 2004/Jenny | find_player("jenny")->start_bleed();
Mon Feb 16 12:32:17 2004/Grizzt | object ob;ob = find_player("jenny"); ob->death();;;;;
Mon Feb 16 12:32:47 2004/Jenny | "/daemons/chanban_d"->add_ban("grizzt","all",1);;
Thu Feb 19 21:47:15 2004/Jenny | find_player("jenny")->set_mortal(1);
Thu Feb 19 21:48:07 2004/Jenny | find_player("jenny")->set_married("1 No-one\nDon't ask me for anything");
Fri Feb 20 00:28:41 2004/Rag | this_player()->set_married("1 coding and only coding because\nhis ex-wife is no longer a wizard.");
Fri Feb 20 00:29:59 2004/Rag | this_player()->set_married("1 coding because his ex-wife\nis no longer a wizard");
Fri Feb 20 00:39:38 2004/Rag | this_player()->end_shadow();
Fri Feb 20 00:40:18 2004/Rag | find_player("jenny")->end_shadow();
Fri Feb 20 01:17:44 2004/Rehti | write (read_file("/guilds/artists/
Fri Feb 20 01:17:48 2004/Rehti | write (read_file("/guilds/artists/");;
Fri Feb 20 01:17:52 2004/Rehti | write (read_file("/guilds/artists/");
Fri Feb 20 01:18:00 2004/Rehti | write (read_file("/guilds/artists/artists.c");
Fri Feb 20 01:18:10 2004/Rehti | write (read_file("/guilds/artists/"))
Fri Feb 20 01:18:12 2004/Rehti | write (read_file("/guilds/artists/"));
Fri Feb 20 01:19:16 2004/Rehti | write(read_file("/wizards/jenny/appr_cleric.c");;
Fri Feb 20 01:19:26 2004/Rehti | write (read_file("/wizards/jenny/appr_cleric.c");;
Fri Feb 20 01:19:30 2004/Rehti | write(read_file("/wizards/jenny/appr_cleric.c");;
Fri Feb 20 01:20:26 2004/Rehti | write(read_file("/wizards/jenny/appr_cleric.c"));;
Fri Feb 20 01:20:42 2004/Rehti | write(read_file("/guilds/"));;
Fri Feb 20 01:20:52 2004/Rehti | write(read_file("/guilds/artists/artist.c"));;
Fri Feb 20 11:43:13 2004/Astarel | find_player("celes")->set_married("1 Astarel");
Fri Feb 20 11:44:27 2004/Astarel | find_player("celes")->set_married("");
Tue Feb 24 14:37:01 2004/Moonstar | write(read_file("/wizards/moonstar/cs.c"));
Tue Feb 24 14:46:27 2004/Moonstar | write(read_file("/cmds/zap.c"));
Wed Feb 25 20:17:52 2004/Moonstar | find_player("jenny")->set_married("1 Exping and Moonstar");
Wed Feb 25 20:18:18 2004/Moonstar | find_player("jenny")->set_married("1 Exping");
Wed Feb 25 20:19:04 2004/Moonstar | find_player("jenny")->set_married("1 Exping (and rag)");
Wed Feb 25 20:19:38 2004/Moonstar | find_player("jenny")->set_married("1 Exping (and Rag)");
Wed Feb 25 20:26:52 2004/Moonstar | find_player("jenny")->set_married("1 Exping (and Rag & Maria)");
Thu Feb 26 13:13:04 2004/Rag | find_player("jenny")->set_married("1 newbies.\nYou can ask her for help.");
Thu Feb 26 13:14:50 2004/Rag | find_player("jenny")->set_married("1 exping and Maria.\nShe is the ex-wife of the mighty Archwizard Rag.\nFeel free to ask her newbie questions");
Thu Feb 26 13:37:23 2004/Rag | write("/wizards/rag/events/thunt/master"->get_x());
Mon Mar  1 17:57:27 2004/Rehti | this_player()->set_total_worth(10000000000)
Mon Mar  1 17:57:33 2004/Rehti | this_player()->set_total_worth(10000000000);
Mon Mar  1 17:57:59 2004/Rehti | this_player()->set_total_worth(10000000000);
Mon Mar  1 17:58:01 2004/Rehti | this_player()->set_total_worth(10000000000);
Mon Mar  1 17:58:03 2004/Rehti | this_player()->set_total_worth(10000000000);
Tue Mar  2 16:46:07 2004/Rag | find_player("jenny")->set_mastery("Dangerous Lightning",46);
Tue Mar  2 16:46:21 2004/Rag | find_player("jenny")->set_mastery("Offensive spellcasting", 84);
Tue Mar  2 16:46:31 2004/Rag | find_player("jenny")->set_mastery("Holy faith", 8);
Tue Mar  2 16:46:43 2004/Rag | find_player("jenny")->set_mastery("Knowledge of shielding",14);
Tue Mar  2 16:46:51 2004/Rag | find_player("jenny")->set_mastery("Knowledge of weaknesses",2);
Tue Mar  2 16:47:01 2004/Rag | find_player("jenny")->set_mastery("Dangerous Ice",48);
Tue Mar  2 16:47:11 2004/Rag | find_player("jenny")->set_mastery("Dangerous Fire",51);
Tue Mar  2 16:47:17 2004/Rag | find_player("jenny")->set_mastery("Dangerous Earth", 1);
Tue Mar  2 16:48:57 2004/Rag | find_player("jenny")->set_married("0");
Tue Mar  2 16:50:59 2004/Rag | find_player("bloodstorm")->set_mastery("Dangerous Lightning",46);
Tue Mar  2 16:51:09 2004/Rag | find_player("bloodstorm")->set_mastery("Dangerous Ice",42);
Tue Mar  2 16:51:15 2004/Rag | find_player("bloodstorm")->set_mastery("Dangerous Fire",48);
Tue Mar  2 16:51:27 2004/Rag | find_player("bloodstorm")->set_mastery("Offensive spellcasting", 80);
Tue Mar  2 16:51:37 2004/Rag | find_player("bloodstorm")->set_mastery("Holy faith", 4);
Tue Mar  2 19:26:10 2004/Rag | find_player("jenny")->set_married("1 exping");
Tue Mar  2 19:49:44 2004/Rag | find_player("maria")->set_mastery("Holy faith",35);
Sat Mar  6 16:09:38 2004/Rehti | ban
Mon Mar  8 16:54:10 2004/Moonstar | find_player("moontest")->set_rebirth("1");
Thu Mar 11 14:38:41 2004/Rehti | find_player("trooper")->query_max_lvl()
Thu Mar 11 14:55:43 2004/Walla | find_player("trooper")->query_max_level();
Thu Mar 11 14:56:05 2004/Walla | write(find_player("trooper")->query_max_level();
Thu Mar 11 14:57:11 2004/Walla | write(find_player("trooper")->query_max_level());
Fri Mar 12 15:46:40 2004/Rag | find_player("ragtest")->vapaudu()
Thu Mar 18 21:17:16 2004/Moonstar | read_file(write("/wizards/celtron/forest/orc_shield"));
Wed Mar 24 17:54:35 2004/Moonstar | find_player("ynnej")->add_exp(20000);
Thu Mar 25 21:38:54 2004/Moonstar | find_player("moonstar")->set_married("1 Piia Keihäs\nHe is the leader of Apocalypse Dudes");;
Tue Mar 30 20:13:31 2004/Walla | ?
Sun Apr  4 14:53:10 2004/Astarel | int i; i = file_size("/data/castle_4/chests"); return i;
Sun Apr  4 14:53:26 2004/Astarel | int i; i = file_size("/data/castle_4/chests"); return i;
Sun Apr  4 17:28:03 2004/Astarel | move_object(clone_object("/room/houses/keys/key6.c",find_player("kaappi"));
Sun Apr  4 17:28:11 2004/Astarel | move_object(clone_object("/room/houses/keys/key6.c"),find_player("kaappi"));
Mon Apr  5 12:07:01 2004/Astarel | string str; str = file_name(environment(this_object())); return str;
Mon Apr  5 12:59:14 2004/Astarel | return file_name(environment(this_object()));
Mon Apr  5 12:59:40 2004/Astarel | return file_name(environment(find_player("astarel")));
Mon Apr  5 23:14:02 2004/Astarel | move_object(clone_object("/room/houses/keys/key6.c"),find_player("kaappi")); tell_object(find_player("kaappi"), "ÄLÄ SIT VITTU ENÄÄ HUKKAA TÄTÄ PERKELE!");
Wed Apr  7 19:29:30 2004/Moonstar | move_object(clone_object("/room/houses/keys/key6.c"),find_player("kaappi"));
Sat Apr 10 02:05:40 2004/Rag | "/daemons/leader_d"->remove_leader("hobbit");
Sun Apr 11 21:36:28 2004/Rag | "/daemons/chanban_d"->add_ban("yodin","all",1);
Mon Apr 12 17:32:09 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:32:09 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:33:17 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:33:21 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:33:21 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:33:21 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:34:05 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:34:07 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:34:07 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:34:21 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:34:21 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:35:47 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:35:47 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:37:05 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:37:07 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:37:33 2004/Astarel | return "/wizards/astarel/daemons/bug_d"->query_bugdata()
Mon Apr 12 17:37:39 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:37:39 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:37:41 2004/Astarel | return "/wizards/astarel/daemons/bug_d"->query_bugdata()
Mon Apr 12 17:38:03 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:38:03 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:38:03 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:38:05 2004/Astarel | return "/wizards/astarel/daemons/bug_d"->query_bugdata()
Mon Apr 12 17:39:23 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:39:23 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:39:23 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:39:25 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:40:11 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:40:11 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:40:13 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:40:13 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:41:01 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:41:01 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:41:01 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:15 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:15 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:25 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:27 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:57 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:57 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:57 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:57 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:57 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:42:59 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:44:45 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:44:45 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:44:47 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:44:47 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:47:33 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:47:35 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:47:35 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:47:35 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:50:45 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:50:49 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:50:49 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:51:05 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:51:05 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:51:05 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:51:05 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:51:07 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:51:21 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:51:21 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:51:23 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 17:51:23 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:47:31 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:47:33 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:47:33 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:47:33 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:47:33 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:47:35 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:47:35 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:47:35 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:11 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:11 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:11 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:11 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:11 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:11 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:51 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:51 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:51 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:48:51 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:52:53 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:52:53 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:52:55 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:56:11 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:56:13 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:56:13 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:56:13 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:56:57 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 19:56:57 2004/Astarel | "/wizards/astarel/daemons/bug_d"->add_bug("asta","poppeli","hajos","mina","nyt");
Mon Apr 12 21:08:07 2004/Astarel | return ctime(time());
Mon Apr 12 21:29:47 2004/Astarel | return creator(environment(this_player()));
Tue Apr 13 12:55:43 2004/Astarel | return version();
Wed Apr 14 12:32:51 2004/Astarel | mapping mapp: mapp = ([ 1: ({"hippuli","happuli",}); ({"happuli","hippuli", }), ]); if(mapp[1,0][0] == mapp[1,1][1]) { return "ON!"; } return "EI!";
Wed Apr 14 12:33:09 2004/Astarel | mapping mapp; mapp = ([ 1: ({"hippuli","happuli",}); ({"happuli","hippuli", }), ]); if(mapp[1,0][0] == mapp[1,1][1]) { return "ON!"; } return "EI!";
Wed Apr 14 12:33:17 2004/Astarel | mapping mapp; mapp = ([ 1: ({"hippuli","happuli",}); ({"happuli","hippuli", }), ]); if(mapp[1,0][0] == mapp[1,1][0]) { return "ON!"; } return "EI!";
Wed Apr 14 13:40:13 2004/Astarel | copy_file("/wizards/astarel/sh_rakenne","wizards/astarel/toimiiko");
Wed Apr 14 13:49:37 2004/Astarel | copy("/wizards/astarel/sh_rakenne","wizards/astarel/toimiiko");
Wed Apr 14 13:49:43 2004/Astarel | cp("/wizards/astarel/sh_rakenne","wizards/astarel/toimiiko");
Wed Apr 14 13:49:49 2004/Astarel | file_copy("/wizards/astarel/sh_rakenne","wizards/astarel/toimiiko");
Wed Apr 14 14:12:57 2004/Astarel | "/wizards/astarel/cmds/kopiokone"->copy_file("/wizards/astarel/sh_rakenne","/wizards/astarel/testi");
Wed Apr 14 14:14:25 2004/Astarel | "/wizards/astarel/cmds/_cp"->cmd_cp("/wizards/astarel/sh_rakenne /wizards/astarel/testi");
Wed Apr 14 14:15:15 2004/Astarel | "/castle/obj/kk"->copy_file("/wizards/astarel/sh_rakenne","/wizards/astarel/testi");
Wed Apr 14 14:17:39 2004/Astarel | "/castle/kk"->copy_file("/wizards/astarel/sh_rakenne","/wizards/astarel/testi");
Wed Apr 14 14:23:11 2004/Astarel | "/wizards/astarel/_cp.c"->copy_file("/wizards/astarel/kk.c","/wizards/astarel/kkk.c");
Wed Apr 14 16:36:02 2004/Astarel | return file_name(this_player());
Wed Apr 14 16:41:34 2004/Astarel | string str; str = "/data/stronghold/"; return str[0..16];
Wed Apr 14 16:55:40 2004/Astarel | return "/";
Wed Apr 14 16:55:44 2004/Astarel | return "\";
Wed Apr 14 16:55:48 2004/Astarel | return "\\";
Wed Apr 14 17:11:05 2004/Astarel | return file_name(environment(this_player())));
Wed Apr 14 17:11:07 2004/Astarel | return file_name(environment(this_player()));
Wed Apr 14 20:38:32 2004/Astarel | mkdir("/wizards/astarel/testidirri");
Wed Apr 14 20:38:42 2004/Astarel | mkdir("/world/city/map");
Thu Apr 15 10:11:06 2004/Astarel | "/stronghold/daemons/copier"->copy_file("/stronghold/base/sh_base_room.c","/data/stronghold/stronghold_1/rooms/entrance.c");
Thu Apr 15 10:12:32 2004/Astarel | "/stronghold/daemons/copier"->copy_file("/stronghold/base/sh_base_room.c","/data/stronghold/stronghold_1/rooms/entrance.c");
Thu Apr 15 10:51:52 2004/Astarel | return file_name(this_player());
Thu Apr 15 13:18:47 2004/Astarel | return file_name(environment(this_player()));
Thu Apr 15 14:03:38 2004/Astarel | return environment(this_player())->query_dest_dir();
Thu Apr 15 14:06:56 2004/Astarel | return functionlist(environment(this_player()));
Thu Apr 15 14:16:08 2004/Astarel | return environment(this_player())->query_valid_dir(south);
Thu Apr 15 14:16:22 2004/Astarel | return environment(this_player())->query_valid_dir("cs");
Thu Apr 15 14:25:58 2004/Astarel | return environment(this_player())->query_x()
Thu Apr 15 17:16:39 2004/Astarel | "/wizards/moonstar/muut/map"->drawmap(5,2);
Thu Apr 15 17:17:01 2004/Astarel | "/wizards/moonstar/muut/map"->drawmap(20,8);
Thu Apr 15 17:17:47 2004/Moonstar | "/wizards/moonstar/muut/map"->drawmap(20,8);;
Thu Apr 15 17:18:53 2004/Moonstar | #include <ansi.h>
Thu Apr 15 17:19:35 2004/Moonstar | "/wizards/moonstar/muut/map2"->drawmap(20,8);;
Thu Apr 15 17:20:56 2004/Moonstar | "/wizards/moonstar/muut/map2"->drawmap(20,8);;
Thu Apr 15 17:22:42 2004/Moonstar | "/wizards/moonstar/muut/map2"->drawmap(20,8);;
Thu Apr 15 17:26:12 2004/Moonstar | "/wizards/moonstar/muut/map2"->drawmap(20,8);;
Thu Apr 15 17:27:52 2004/Moonstar | /wizards/moonstar/muut/map2"->drawmap(20,8);;
Thu Apr 15 20:43:46 2004/Moonstar | "/wizards/moonstar/muut/map"->drawmap(20,8);;
Thu Apr 15 20:44:40 2004/Moonstar | "/wizards/moonstar/muut/map2"->drawmap(20,8);;
Thu Apr 15 21:34:00 2004/Rag | "/wizards/moonstar/muut/map"->drawmap(20,8);
Thu Apr 15 21:48:06 2004/Moonstar | "/wizards/moonstar/muut/map"->drawmap(20,8);;
Thu Apr 15 21:52:08 2004/Moonstar | "/wizards/moonstar/muut/map"->drawmap(20,8);;
Thu Apr 15 21:56:14 2004/Moonstar | "/wizards/moonstar/muut/map"->drawmap(20,8);;
Thu Apr 15 21:58:56 2004/Moonstar | "/wizards/moonstar/muut/map"->drawmap(20,8);;
Thu Apr 15 22:06:13 2004/Moonstar | "/wizards/moonstar/muut/map"->drawmap(20,8);;
Thu Apr 15 22:12:47 2004/Moonstar | "/wizards/moonstar/muut/hum"->drawmap(20,8);;
Thu Apr 15 22:13:15 2004/Moonstar | "/wizards/moonstar/muut/map"->drawmap(20,8);;
Thu Apr 15 22:15:09 2004/Moonstar | "/wizards/moonstar/muut/hum"->drawmap(20,8);;
Thu Apr 15 22:17:28 2004/Moonstar | "/wizards/moonstar/muut/hum"->drawmap(20,8);;
Thu Apr 15 22:19:42 2004/Moonstar | "/wizards/moonstar/muut/hum"->drawmap(20,8);;
Thu Apr 15 23:25:54 2004/Walla | "/daemons/chanban_d"->addban("jenny", "all", 10);
Fri Apr 16 13:58:10 2004/Astarel | "/data/stronghold/stronghold_1/rooms/room0"->remove_chest(1);
Sat Apr 17 18:46:40 2004/Moonstar | find_player("moonstar")->set_exp("100000000000");;
Sat Apr 17 18:51:32 2004/Moonstar | find_player("moonstar")->set_exprate("150");;
Sun Apr 18 20:35:05 2004/Astarel | return file_name(find_player("jarzki"));
Mon Apr 19 14:05:59 2004/Astarel | return functionlist(environment(this_player()));
Mon Apr 19 14:06:19 2004/Astarel | return environment(this_player())->query_valid_dir();
Mon Apr 19 14:06:25 2004/Astarel | return environment(this_player())->query_dest_dir();
Thu Apr 22 17:59:53 2004/Astarel | return "/data/stronghold/stronghold_1/daemons/sh_main_d"->query_room_exits(1);
Thu Apr 22 18:03:47 2004/Astarel | return "/data/stronghold/stronghold_1/daemons/sh_main_d"->query_room_exits(1);
Thu Apr 22 18:03:51 2004/Astarel | return "/data/stronghold/stronghold_1/daemons/sh_main_d"->query_room_exits(0);
Fri Apr 23 12:58:14 2004/Astarel | return function_list(environment(this_object()));
Fri Apr 23 12:58:16 2004/Astarel | return function_list(environment(this_object());
Fri Apr 23 12:58:20 2004/Astarel | return functionlist(environment(this_object());
Fri Apr 23 12:58:22 2004/Astarel | return functionlist(environment(this_object()));
Fri Apr 23 12:58:38 2004/Astarel | return functionlist(environment(find_player("astarel")));
Sat Apr 24 19:24:24 2004/Astarel | object ob; ob = present("khaland",environment(this_player())); return living(ob);
Sat Apr 24 19:24:32 2004/Astarel | object ob; ob = present("khaland",environment(this_player())); return interactive(ob);
Sat Apr 24 19:24:42 2004/Astarel | return living(this_player());
Sat Apr 24 19:24:50 2004/Astarel | return interactive(this_player());
Mon Apr 26 17:03:08 2004/Astarel | return environment(this_player())->query_dest_dir();
Mon Apr 26 17:03:28 2004/Astarel | return functionlist(environment(this_player()));
Mon Apr 26 17:03:40 2004/Astarel | return environment(this_player())->query_valid_dir();
Mon Apr 26 17:03:50 2004/Astarel | return environment(this_player())->query_dir();
Mon Apr 26 17:05:02 2004/Astarel | return environment(this_player())->query_dest_dir();
Mon Apr 26 20:10:31 2004/Astarel | return environment(this_player())->query_dir_dest();
Mon Apr 26 20:10:35 2004/Astarel | return environment(this_player())->query_valid_dir();
Mon Apr 26 20:11:03 2004/Astarel | return environment(this_player())->query_dest_dir();
Mon Apr 26 20:29:08 2004/Astarel | environment(this_player())->add_door("north",1);
Mon Apr 26 20:29:24 2004/Astarel | environment(this_player())->add_exit("north","Sinne/sun/tanne");
Mon Apr 26 20:29:28 2004/Astarel | environment(this_player())->add_door("north",1);
Mon Apr 26 20:29:48 2004/Astarel | environment(this_player())->add_exit("north","Sinne/sun/tanne");
Mon Apr 26 20:29:52 2004/Astarel | environment(this_player())->add_door("north",1);
Mon Apr 26 20:30:04 2004/Astarel | environment(this_player())->make_door_descs
Mon Apr 26 20:30:16 2004/Astarel | environment(this_player())->make_door_descs();
Mon Apr 26 20:33:06 2004/Astarel | environment(this_player())->add_exit("north","Sinne/sun/tanne");
Mon Apr 26 20:33:10 2004/Astarel | environment(this_player())->add_door("north",1);
Mon Apr 26 20:33:14 2004/Astarel | environment(this_player())->make_door_descs();
Mon Apr 26 20:33:42 2004/Astarel | environment(this_player())->remove_exit("north");
Mon Apr 26 20:38:44 2004/Astarel | environment(this_player())->add_exit("south","Sinne/sun/tanne");
Mon Apr 26 20:38:52 2004/Astarel | environment(this_player())->add_door("south",1);
Mon Apr 26 20:38:56 2004/Astarel | environment(this_player())->make_door_descs();
Mon Apr 26 20:41:02 2004/Astarel | environment(this_player())->add_exit("south","Sinne/sun/tanne");
Mon Apr 26 20:41:08 2004/Astarel | environment(this_player())->add_door("south",1);
Mon Apr 26 20:41:14 2004/Astarel | environment(this_player())->make_items();
Mon Apr 26 20:41:24 2004/Astarel | environment(this_player())->make_door_descs();
Mon Apr 26 20:41:44 2004/Astarel | environment(this_player())->add_door("south",1);
Mon Apr 26 20:42:04 2004/Astarel | environment(this_player())->make_doors();
Mon Apr 26 20:42:10 2004/Astarel | environment(this_player())->make_items();
Tue Apr 27 17:16:51 2004/Astarel | find_player("astatest")->add_exp(1000000000000);
Tue Apr 27 17:17:03 2004/Astarel | find_player("astatest")->add_exp(10000);
Tue Apr 27 17:17:03 2004/Astarel | find_player("astatest")->add_exp(10000);
Tue Apr 27 22:14:31 2004/Moonstar | this_player("moontest")->set_exp("10000000000");
Sat May  1 11:47:34 2004/Astarel | "/data/stronghold/stronghold_1/daemons/sh_main_d"->add_hired_guard(0,1,1,({ }),"jorma");
Sat May  1 11:49:10 2004/Astarel | "/data/stronghold/stronghold_1/daemons/sh_main_d"->add_hired_guard(0,1,1,({ }),"jorma");
Sat May  1 11:49:48 2004/Astarel | "/data/stronghold/stronghold_1/daemons/sh_main_d"->add_hired_guard(0,1,1,({ }),"jorma");
Sat May  1 11:50:20 2004/Astarel | "/data/stronghold/stronghold_2/daemons/sh_main_d"->add_hired_guard(0,1,1,({ }),"jorma");
Sat May  1 11:50:48 2004/Astarel | "/data/stronghold/stronghold_3/daemons/sh_main_d"->add_hired_guard(0,1,1,({ }),"jorma");
Sat May  1 12:14:46 2004/Astarel | "/data/stronghold/stronghold_1/daemons/sh_main_d"->add_hired_guard(0,1,1,({ }),"jorma");;
Sat May  1 12:28:21 2004/Astarel | object *obs;int i; obs = all_inventory(environment(this_player())); for(i=0;i<sizeof(obs);i++) {
Sat May  1 12:28:51 2004/Astarel | object *obs;int i; obs = all_inventory(environment(this_player())); for(i=0;i<sizeof(obs);i++) { if(obs[i]->query_is_guard())write("id:"obs[i]->query_guard_id()+"\n"); }
Sat May  1 12:29:17 2004/Astarel | object *obs;int i; obs = all_inventory(environment(this_player())); for(i=0;i<sizeof(obs);i++) { if(obs[i]->query_is_guard())write("id:"+obs[i]->query_guard_id()+"\n"); }
Sun May  2 21:35:05 2004/Walla | "/daemons/chanban_d"->addban("cremater", "all", 500);
Mon May  3 15:19:27 2004/Rag | write(find_player("reaper")->query_skills("foresee attack"));
Fri May  7 19:23:13 2004/Walla | "/daemons/chanban_d"->addban("atw", "all", 600);
Mon May 10 23:25:17 2004/Rag | find_player("aleksi")->set_mastery("Mastery of body focusing",65);
Tue May 11 13:19:00 2004/Rag | find_player("nightscale")->set_mastery("Mastery of body focusing",35);
Wed May 12 01:25:29 2004/Rag | write(present("cookie",this_player())->query_long());
Wed May 12 18:44:12 2004/Astarel | return "/daemons/explore_d2"->query_hash("/wizards/astarel/workroom");
Wed May 12 18:46:52 2004/Rag | return "/daemons/explore_d2"->query_hash("/wizards/rag/workroom");
Wed May 12 19:58:58 2004/Moonstar | find_player("moonstar")->set("mastery of dark arts" 100);;
Wed May 12 20:02:16 2004/Moonstar | find_player("moonstar")->set_masteries("mastery of dark arts" 100);;
Wed May 12 23:44:13 2004/Rag | find_player("bloodstorm")->set_mastery("Offensive spellcasting",100);
Wed May 12 23:44:23 2004/Rag |  find_player("bloodstorm")->set_mastery("Dangerous Lightning",100);
Wed May 12 23:44:31 2004/Rag |  find_player("bloodstorm")->set_mastery("Dangerous Fire",100);
Wed May 12 23:44:51 2004/Rag |  find_player("bloodstorm")->set_mastery("Dangerous Ice",99);
Wed May 12 23:45:13 2004/Rag |  find_player("bloodstorm")->set_mastery("Dangerous Ice",40);
Wed May 12 23:46:03 2004/Rag |  find_player("bloodstorm")->set_mastery("Knowledge of weaknesses",59);
Fri May 14 00:27:08 2004/Rag | find_player("reaper")->set_mastery("Offensive spellcasting",100);
Fri May 14 00:27:58 2004/Rag | find_player("reaper")->set_mastery("Dangerous Ice",15);
Fri May 14 00:28:18 2004/Rag | find_player("reaper")->set_mastery("Dangerous Fire",90);
Fri May 14 00:28:32 2004/Rag | find_player("reaper")->set_mastery("Dangerous Lightning",85);
Fri May 14 00:28:48 2004/Rag | find_player("reaper")->set_mastery("Knowledge of weaknesses",50);
Fri May 14 00:29:28 2004/Rag | find_player("reaper")->set_mastery("Knowledge of shielding",5);
Fri May 14 17:28:19 2004/Moonstar | move_object(clone_object("/wizards/moonstar/test/gm.c"),find_player("moontest"));
Fri May 14 17:28:29 2004/Moonstar | move_object(clone_object("/wizards/moonstar/test/gm.c"),find_player("moontest"));
Fri May 14 17:28:52 2004/Moonstar | move_object(clone_object("/wizards/moonstar/test/gm.c"),find_player("moontest"));
Fri May 14 17:28:52 2004/Moonstar | move_object(clone_object("/wizards/moonstar/test/gm.c"),find_player("moontest"));
Mon May 17 17:54:17 2004/Moonstar | find_player("moonstar")->set_married("1 Piia Keihäs\nHe is the lord of Martial arts\nHe is the god of sorcerers");
Mon May 17 17:55:05 2004/Moonstar | find_player("moonstar")->set_married("1 Piia Keihäs\nHe is the Lord of Martial arts\nHe is the God of Sorcerers");
Tue May 18 13:56:26 2004/Rimber | find_player("rimber")->set_married("1 Moonstar\nHe is the God of the Sorcerers");
Tue May 18 13:58:18 2004/Rimber | find_player("rimber")->set_married("1 underground.\nHe is the God of the Sorcerers");
Sat May 22 01:27:16 2004/Walla | "/daemons/chanban_d"->addban("jenny", "all", 100);
Sat May 22 01:27:42 2004/Walla | "/daemons/chanban_d"->addban("reaper", "all", 100);
Sat May 22 02:21:36 2004/Moonstar | find_player("moontest")->set_total_string("500000000");;
Sat May 22 02:22:26 2004/Moonstar | find_player("moontest")->set_total_string("500000000");
Sat May 22 11:37:38 2004/Moonstar | find_player("moonstar")->set_total_string(100000000);
Sat May 22 11:38:48 2004/Moonstar | find_player("moonstar")->set_total_string("10000000");
Sat May 22 11:39:12 2004/Moonstar | find_player("moonstar")->set_experience("100000");
Sat May 22 11:39:38 2004/Moonstar | find_player("moonstar")->set_experience("100000");
Sat May 22 11:40:08 2004/Moonstar | find_player("moonstar")->set_exp("1000000");
Sat May 22 12:13:58 2004/Moonstar | find_player("moontest")->add_exp("-1000000");
Sun May 23 13:52:30 2004/Moonstar | find_player("moontest")->set_masteries("mastery of body focusing", 100);
Sun May 23 22:12:11 2004/Moonstar | find_player("moonstar")->set_married("1 Piia Keihäs");
Mon May 24 00:06:38 2004/Rag | int t;if ( t = 5 ) { write("Foo"); }
Mon May 24 00:06:56 2004/Rag | int t;if( t = 0 ) { write(t); }
Mon May 24 00:07:10 2004/Rag | t;if ( t = 5 ) { write(t); }
Mon May 24 00:07:20 2004/Rag | int t;if ( t = 5 ) { write(t); }
Tue May 25 16:35:14 2004/Rimber | find_player("rimber")->set_married("1 the underground.\nHe is the Archsorcerer");
Tue May 25 16:35:56 2004/Rimber | find_player("rimber")->set_married(0);
Wed May 26 02:09:08 2004/Rag | destruct(present("box",find_player("reaper")));
Fri May 28 23:28:52 2004/Moonstar | find_player("reaper")->set_married("1 Bobbi Eden");
Tue Jun  1 17:30:30 2004/Moonstar | find_player("dragula")->set_married("Nakkimatti");
Tue Jun  1 17:31:06 2004/Moonstar | find_player("dragula")->set_married("1 NakkiMatti");
Tue Jun  1 17:32:28 2004/Rimber | find_player("dragula")->set_married(0);
Tue Jun  1 22:08:32 2004/Walla | write(find_player("reaper")->query_reborn());
Tue Jun  1 22:15:10 2004/Rag | return find_player("reaper")->query_rebirth()
Tue Jun  1 22:24:38 2004/Walla | write(find_player("reaper")->query_rebirth());
Tue Jun  1 22:54:50 2004/Ahma | write(find_player("reaper")->query_rebirth());
Tue Jun  1 23:09:43 2004/Ahma | write(find_player("reaper")->query_channel());
Tue Jun  1 23:10:07 2004/Ahma | write(find_player("reaper")->query_dex());
Tue Jun  1 23:30:07 2004/Ahma | return find_player("ahma")->query_level();
Tue Jun  1 23:30:13 2004/Ahma | return find_player("ahma")->query_level()
Wed Jun  2 22:59:18 2004/Walla | write(find_player("reaper")->query_max_level());
Thu Jun  3 02:59:05 2004/Rag | find_player("ragtest")->set_mastery("Offensive maneuvers",100);
Thu Jun  3 03:01:13 2004/Rag | return find_player("ragtest")->query_mastery("Offensive maneuvers");
Thu Jun  3 20:49:39 2004/Rag | find_player("reaper")->set_mastery("Knowledge of shielding",0);
Fri Jun  4 00:55:13 2004/Rag | "/daemons"leader_d"->remove_leader("high elf");
Fri Jun  4 00:55:27 2004/Rag | "/daemons/leader_d"->remove_leader("high elf");
Fri Jun  4 05:28:42 2004/Adrigon | this_player()->set_mastery("Dangerous Ice",outstanding);
Fri Jun  4 05:28:54 2004/Adrigon | this_player()->set_mastery("Dangerous Ice",outstanding)
Fri Jun  4 05:29:00 2004/Adrigon | this_player()->set_mastery("Dangerous Ice",100);
Fri Jun  4 05:29:32 2004/Adrigon | this_player()->set_mastery("Offensive spellcasting",100);
Fri Jun  4 05:30:44 2004/Adrigon | this_player()->set_mastery("Dangerous Fire",100);
Fri Jun  4 05:30:58 2004/Adrigon | this_player()->set_mastery("Dangerous Earth",100);
Fri Jun  4 13:25:57 2004/Moonstar | this_player("moonstar")->set_mastery("Dangerous Earth",100);
Fri Jun  4 13:26:31 2004/Moonstar | this_player("moonstar")->set_mastery("holy faith",100);
Sun Jun  6 12:20:18 2004/Moonstar | find_player("rimbertest")->set_exp("9999999999");
Mon Jun  7 00:16:20 2004/Rag | return living(present("hare",environment(this_player())));
Wed Jun  9 19:48:02 2004/Rag | this_player()->set_mastery("Offensive maneuvers",100);
Fri Jun 11 13:26:04 2004/Ahma | move_player(find_player("ahma"), environment(find_player("ant")))
Fri Jun 11 13:28:08 2004/Ahma | move_player(find_player("ahma"), environment(find_player("ant")));
Fri Jun 11 13:28:30 2004/Ahma | move_player(find_player("ahma"), "/world/city/cs");
Fri Jun 11 13:28:40 2004/Ahma | move_player(find_player("ahma"), "/world/city/cs.c");
Fri Jun 11 13:29:38 2004/Ahma | move_object(find_player("ahma"), "/world/city/cs");
Wed Jun 16 20:49:47 2004/Ahma | move_object(present("pipe"), environment(this_object()))
Thu Jun 17 20:42:44 2004/Astarel | find_player("teclis")->set_marry("1 Astarel.\nHe is the one and only QuestMUD Mascot!");
Thu Jun 17 20:42:56 2004/Astarel | find_player("teclis")->set_married("1 Astarel.\nHe is the one and only QuestMUD Mascot!");
Thu Jun 17 20:43:06 2004/Astarel | find_player("teclis")->set_married("1 Astarel.\nHe is the one and only QuestMUD Mascot");
Thu Jun 17 20:44:12 2004/Astarel | find_player("teclis")->set_married("1 D3v1l.\nHe is the one and only QuestMUD Mascot");
Thu Jun 17 20:45:14 2004/Astarel | find_player("teclis")->set_married("1 Reaper <3 Devil <3 Kaappi <3\nHe is the one and only QuestMUD Mascot");
Thu Jun 17 21:10:14 2004/Astarel | find_player("teclis")->set_married("1 Devil <3 Kaappi <3 Poke <3 Yodin\nHe is the one and only QuestMUD Mascot");
Sun Jun 20 18:13:46 2004/Moonstar | find_player("moontest")->set_skills("unicorntest,100");
Sun Jun 20 18:14:18 2004/Moonstar | find_player("moontest")->set_skills("unicorntest",100);
Wed Jun 23 18:34:14 2004/Moonstar | find_player("moontest")->set_stunned("2");
Fri Jul  2 16:59:16 2004/Rag | find_player("nergal")->query_party()->query_leader()
Fri Jul  2 17:07:32 2004/Rag | return find_player("nergal")->query_party()->query_leader()
Sat Jul  3 20:15:00 2004/Astarel | string str; str = "pilipalilaulupalikka"; return strstr(str,"p",1);
Sat Jul  3 20:15:04 2004/Astarel | string str; str = "pilipalilaulupalikka"; return strstr(str,"p",2);
Sat Jul  3 20:15:08 2004/Astarel | string str; str = "pilipalilaulupalikka"; return strstr(str,"p",10);
