#include <ansi.h>
inherit "room/room";

status sortting(object obj1, object obj2) {
        int i1,i2;
        i1=obj1->query_level();
        i2=obj2->query_level();
        return i1>i2;
}

status wiz(object obj1, object obj2) {
        int i1,i2;
        i1=obj1->query_wiz();
        i2=obj2->query_wiz();
        return i1>i2;
}

status unidle(object ob) {
        if(query_idle(ob) < 300) return 1;
        return 0;
}

status logon(object ob) {
        if(ob->query_level() > 0) return 1;
        return 0;
}

string get_c(object ob) {
        switch(ob->query_wiz()) {
        case 0 : return RED_F;
        case 1 : return CYAN_F;
        case 2 : return YELLOW_F;
        case 3 : return MAGENTA_F;
        case 4 : return BLUE_F;
        case 5 : return WHITE_F;
        return " Error ";
        }
}

reset(arg) {
  if(arg) return;
  short_desc = "Grizzt's little cloud";
  long_desc = "";
  add_exit("cs","/world/city/cs");
  add_exit("inn","/world/city/inn");
  add_exit("post","/world/city/post");
  add_exit("guild","/world/city/innstabl");
  add_exit("marriage","/wizards/nalle/marriage/marriage_room");
  add_exit("eventroom","/wizards/siki/event_room");
  add_exit("thiraband","/wizards/grizzt/thiraband/gates");

  set_light(1);
  set_not_out(1);
  property = allocate(1);
  property[0] = "no_summon";
  
}

init() {
add_action("druids", "druids");
::init();
}
druids() {
this_player()->move_player("druids#/wizards/grizzt/druids/outer1");
return 1;






}

long() {
        object *us;
        int i, lkm;
        string str,name,color,env;

        str = "The Unidle\n";
        str += sprintf("%4-s %15-s %s\n", "Lvl", "Name", "Location");
        str += "----------------------------------------\n";
        str += sprintf("Total of %d users, %d unidle\n", lkm, sizeof(us));

        write(str);
        ::long();
}

init()
{
 if(    this_player()->query_name() != "Raggenstein" &&
        this_player()->query_name() != "Nalle"   &&
        this_player()->query_name() != "Golthar"   &&
        this_player()->query_name() == "Jenny"
        this_player()->query_name() == "Rag"
    )
   {
    move_object(this_player(),"/world/special/hell");
    tell_object(this_player(),"Acces denied, error in line 5634. You die.\n");
   }
 ::init();
}
