inherit "/room/map_daemon";

check_rooms(string str) {
  if (str == "t") return clone_object("/wizards/gynter/darke/virtual/narrow_tunnel");
  if (str == "T") return clone_object("/wizards/gynter/darke/virtual/tunnel");
  if (str == "p") return clone_object("/wizards/gynter/darke/virtual/passage");
  if (str == "P") return clone_object("/wizards/gynter/darke/virtual/city_road");
  if (str == "v") return clone_object("/wizards/gynter/darke/virtual/elfdie");
  if (str == "s") return clone_object("/wizards/gynter/darke/virtual/traingr");
  if (str == "C") return clone_object("/wizards/gynter/darke/virtual/cityentr");
}

check_special_coords(x,y) {
  if(x == 34 && y == 1) return "out: ";
  if(x == 32 && y == 15) return "opening: /wizards/gynter/darke/city/Ecity";
  return 0;
}


get_map() {
  map = allocate(25);
 /*          1234567890123456789012345678901234567890123456789012345 (exit 16 ja 9)*/
  map[0] =  "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[1] =  "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[2] =  "^^^^^^^^^^^^^^^^TTTTTTTTTTT^^^^^^^t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[3] =  "^^^^^^^^^^^^^^^T^^^^^^^^^^^T^^^^^^t^^^^^^tttttt^^^^^^^^^^v^^^^^^^^^^^^";
  map[4] =  "^^^^^^^^^^^^^^^T^^^^^^^^^^^^T^^^^^t^^^^^t^^^^^^t^^^^^^^^t^^^^^^^^^^^^^";
  map[5] =  "^^^^^^^^^^^^^^^T^^^^^^^^^^^^^TTTTt^t^^^t^^^^^^^T^^^^^^^t^^^^^^^^^^^^^^";
  map[6] =  "^^^^^^^^^^^^^^^T^^^^^^^^^^^^p^^^^^^^t^t^^^^^^^^T^^^^^^t^^^^^^^^^^^^^^^";
  map[7] =  "^^^^^^^^^^^^^^tTt^^^^^^^^^^^^ppp^^^^^t^^^^^^^^^T^^^^^t^^^^^^^^^^^^^^^^";
  map[8] =  "^^^^^^^^^^^^^t^T^t^^^^^^^^^^^^^^p^^^^^^^^^^^^^^Tttttt^^^^^^^^^^^^^^^^^";
  map[9] =  "^^^^^^^^^^^^v^^T^^v^^^^^^^^^^^^^^pppppppppp^^^^T^^^^^t^^^^^^^^^^^^^^^^";
  map[10] = "^^^^^^^^^^^^^^^T^^^^^^^^^^^^^^^^P^^^^^^^^^p^^^^T^^^^^^t^^^^^^^^^^^^^^^";
  map[11] = "^^^^^^^^^^^^v^^T^^v^^^^^^^^^^^^^P^^^^^^^^^P^^^^T^^^^^^^t^^^^^^^^^^^^^^";
  map[12] = "^^^^^^^^^^^^^p^T^p^^^^^^^^^^^^^^P^^^^^^^^^P^^^^T^^^^^^^^t^^^^^^^^^^^^^";
  map[13] = "^^^^^^^^^^^^^^pTp^^^^^^^^^^^^^^^P^^^^^^^^^PttttT^^^^^^^^^v^^^^^^^^^^^^";
  map[14] = "^^^^^^^^^^^^^^^T^^^^^^^^^^^^^^^^P^^^^^^^^^P^^^^^t^^^^^^^^^^^^^^^^^^^^^";
  map[15] = "^^^^^^^^^^^^^^^^TPPPPPPPPPPPPPP^C^PPPPPPPPP^^^^^^t^^^^^^^^^^^^^^^^^^^^";
  map[16] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^P^^^P^^^^^^^^^^^^^^^t^^^^^^^^^^^^^^^^^^^";
  map[17] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^PPPPP^^^^^^^^^^^^^^^^p^^^^^^^^^^^^^^^^^^";
  map[18] = "^^^^^^^^^^^^^^^^^^^sssssssss^^^^P^^^^^^^^^^^^^^^^^^^p^^^^^^^^^^^^^^^^^";
  map[19] = "^^^^^^^^^^^^^^^^^^^sssssssss^^^^P^^^^^^^^^^^^^^^^^^^^p^^^^^^^^^^^^^^^^";
  map[20] = "^^^^^^^^^^^^^^^^^^^ssssssssspppp^^^^^^^^^^^^^^^^^^^^^^p^^^^^^^^^^^^^^^";
  map[21] = "^^^^^^^^^^^^^^^^^^^sssssssss^^^^^^^^^^^^^^^^^^^^^^^^^^^v^^^^^^^^^^^^^^";
  map[22] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  return map;
}
