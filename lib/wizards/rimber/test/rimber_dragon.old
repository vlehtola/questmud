inherit "obj/monster";
int strena, dexi, intti, hiput, spt;
int fol, a;
string dir, tgt, master = "rimber";
string str, who;
object ob;


reset(arg) {
 ::reset(arg);
 a = 0;
 fol = 0;
 strena = 400;
 dexi = 230;
 intti = 300;
 hiput = 5000;
 spt = 3000;
 if(arg) return;
 set_level(1);
 set_str(strena);
 set_dex(dexi);
 set_int(intti);
 set_max_hp(hiput);
 set_max_sp(spt);
 set_name("dragon");
 set_short("Rimber's pet dragon");
 set_long("This is Rimber's pet dragon. It is HUGE.\n");
}

catch_tell(str) {
 string what;
 object obb, ob;
 if(sscanf(str, "%s says '%s %s'", who, what, tgt) == 3) {
 if(lower_case(who) != master) return;
 switch(what) {
  case "follow" : fol = 1;
   a = 1;
   break;
  case "stay" : fol = 0;
   a = 5;
   break;
  case "dismiss" : a = 3;
   break;
  case "attack" : a = 4;
   break;
 }
 switch(tgt) {
  case "me" : a = 1;
   break;
  case "here" : a = 5;
  break;
 }
 call_out("komento", 0);
 }
 if(sscanf(str, "%s leaves %s.", who, dir) == 2) {
 obb = find_player(lower_case(who));
 if(!obb) return;
 if(fol == 0) return;
 if(lower_case(who) != master) return;
 a = 2;
 call_out("komento", 0);
 }
}



int komento() {
 switch(a) {
  case 0 : say("Dragon booms: 'What you mean Master?'\n");
   break;
  case 5 : say("Dragon booms: 'OK. I will stay here Master.'\n");
   break;
  case 1 : write("Dragon booms: 'Ok. I will follow you Master.'\n");
   break;
  case 2 : init_command(dir);
   break;
  case 3 : say("Dragon booms: 'Goodbye Master.'\n");
   say("Dragon flies away.\n");
   destruct(this_object());
   break;
  case 4 : say("Dragon booms: 'As you wish Master.'\n");
   tgt = present(lower_case(tgt), environment(this_object()));
   attack_object(tgt);
   break;
 }
 a = 0;
}
