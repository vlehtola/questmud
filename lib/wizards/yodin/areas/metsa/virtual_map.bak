inherit "/room/map_daemon";

check_rooms(string str) {
if (str == "F") return clone_object("/wizards/yodin/areas/metsa/forest");
if (str == "p") return clone_object("/wizards/yodin/areas/metsa/plains");
if (str == "f") return clone_object("/wizards/yodin/areas/metsa/forest");

}

check_special_coords(x,y) {
  if(x == 26 && y == 21) return "/wizards/yodin/areas/metsa/entrance.c";
  return 0;
}
get_map() {
map = allocate(31);
 /*          1234567890123456789012345678901234567890*/
  map[0] =  "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[1] =  "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[2] =  "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[3] =  "^^^^pppppppp^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[4] =  "^^^^pppppppp^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[5] =  "^^^^pppppppp^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[6] =  "^^^^ppppppppp^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[7] =  "^^^^pppppp^^^^^^^^^^^^^^^^^^^^^^^^^^^^^f^^^^^^^^^^^^^^^^^^^^^^ff^^^^^^^^^";
  map[8] =  "^^^^ppppp^^^^^^^^^^^^^^^^^^^^^^^^^^^^^f^f^^^^^^^^^^^^^^^^^F^^?ff?^^^^^^^^";
  map[9] =  "^^^^pppp^^^^^^^^^^^^^^^^^^^^^^^^^f^^^f^^^ffff^^^^^^^^^^^^FF^^^^f^^^^^^^^^";
  map[10] = "^^^^pppp^^^^^^^^^^^^^^^^^^^^^^^^f^fff^^^^^^^^ffff^^^^^^^FFFF^^^^^FFFFF^^^";
  map[11] = "^^^^ppp^^^^^^^^^^^^^^^^^^^^^^^^^f^^f^^^^^^^^^^^^^f^^^^^FFFFF^^^^^^FFF^^^^";
  map[12] = "^^^^pppp^^^^^^^^^^^^^^^^^^^^^FFFF^^f^^^^^^^^^^^^^f^^^^FFFFFFF^^^^^FFF^^^^";
  map[13] = "^^^^pppp^^^^^^^^^^^^^^^^^^^pppppp^^ffffffffffffffff^^FFFFFFFFF^^^^FFFF^^^";
  map[14] = "^^^^ppp^^^^^^^^^^^^^^^^^^pppppppp^^^^^^^^^^^^^^^^^^^FFFFFFFFF^^^^FFFF^^^^";
  map[15] = "^^^^ppp^^^^^^^^^^^^^^^^^pppppppppp^^^^^^^^^^^^^^^^FFFFFFFFFF^^^^^FFFFF^^^";
  map[16] = "^^^^^ppp^^^^^^^^^^^^^^^pppppppppppp^^^^^^^^^^^^FFFFFFFFFF^^^^^FFFFFF^^^^^";
  map[17] = "^^^^^^pp^^^^^^^^^^^^^^pFppppppppppFp^^^^^^^^^FFFFFFFFFF^^^^^FFFFF^^^^^^^^";
  map[18] = "^^^^^^ppp^^^^^^^^^^^^^ppFppppppppFpp^^^^^^^^FFFFFFFFFFF^^^^^^^FFFF^^^^^^^";
  map[19] = "^^^^^^pppppp^^^^^^^^^^^pppppppppppp^^^^^^^^FFFFFFFFFFFFF^^^^FFFF^^^^^^^^^";
  map[20] = "^^^^^^^^^ppp^^^^^^^^^^^^pppppppppp^^^^^^^^^FFFFFFFFFFFFF^^^^^FFF^^^^^^^^^";
  map[21] = "^^^^^^^^^^ppp^^^^^^^^^^^^^?^^^^^^^FFFFFFFFFFFFFFFFFFF^^^^^^^FF^^^^^^^^^^^";
  map[22] = "^^^^^^^^^^^pppppppppppppp^^^^pp^^FFFFFFFFFFFFFFFFFFFFF^^^^^FFF^^^^^^^^^^^";
  map[23] = "^^^^^^^^^^^^^^^^^^^^^^^^^FFFFFFFFFFFFFFFFFF^^^^^FFFFFFFFFFFFF^^^^^^^^^^^^";
  map[24] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^FFFFFFFFFFFFFFF^^^^^^^^FFFFFFFFFFF^^^^^^^^^^^";
  map[25] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^FFFFFFFFFFF^^^^^^^^^^^FFFFFFF^^^^^^^^^^^^";
  map[26] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[27] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  map[28] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
   map[29] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
   map[30] = "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^";
  return map;
}
